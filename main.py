# !/usr/bin/env python3
# Generated by Proteus Visual Designer for Raspberry Pi

# Modules

from wiringpi import Serial
import RPi.GPIO as GPIO
from time import*
import requests
import math
import random
    
#Configuraciones de ubidots

TOKEN = "BBFF-PQVv4qmHWR2HsRXejpL2AAdkClsC9s"  # Put your TOKEN here
DEVICE_LABEL = "dispensador"  # Put your device label here 
VARIABLE_LABEL_1 = "nivel"  # Put your first variable label here


#construir el payload para enviar a ubidots

def build_payload(variable_1,value_1):

    payload = {variable_1: value_1}

    return payload

 #POST request a Ubidots

def post_request(payload):
    # Creates the headers for the HTTP requests
    url = "http://industrial.api.ubidots.com"
    url = "{}/api/v1.6/devices/{}".format(url, DEVICE_LABEL)
    headers = {"X-Auth-Token": TOKEN, "Content-Type": "application/json"}

    # Makes the HTTP requests
    status = 400
    attempts = 0
    while status >= 400 and attempts <= 5:
        req = requests.post(url=url, headers=headers, json=payload)
        status = req.status_code
        attempts += 1
        sleep(1)

    # Processes results
    if status >= 400:
        print("[ERROR] Could not send data after 5 attempts, please check \
            your token credentials and internet connection")
        return False

    print("[INFO] request made properly, your device is updated")
    return True
   
  
  
baud = 9600
ser  = Serial("/dev/serial0",baud)
sleep(0.3)

#recibir datos desde el ATMEGA328P
def recibir(echo = True):
 data = ""
 while True:
  input = ser.getchar()
  if echo:
   ser.putchar(input)
  if input == "\r":
   return (data)
  data += input
 sleep(0.2)
  
#imprimir mensaje con salto de linea
def printsln(menss):
 ser.puts(menss+"\r")
 sleep(0.2)

 #imprimir mensaje sin salto de linea
def prints(menss):
 ser.puts(menss)
 sleep(0.2)

# Main function
def main () :
# Infinite loop
 while True :
  print("Recibiendo datos..  ")
  mensaje = recibir()
  payload = build_payload( VARIABLE_LABEL_1,mensaje)
  
  try:
   
    print("[INFO] Attemping to send data")
    post_request(payload)
    print("[INFO] finished")
    sleep(5)
    
  except:
   pass
  sleep(0.2)
  printsln("ok")
  
  
# Command line execution
if __name__ == '__main__' :
 main()
